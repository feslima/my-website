import type { NextPage } from 'next';
import Head from 'next/head';
import { BlogLayout } from '../../components/layout';

const SQLAlchemyDoctor: NextPage = () => {
  return (
    <BlogLayout>
      <div className="divide-y divide-feslima-400 divide-solid flex justify-center flex-col">
        <Head>
          <title>Felipe Lima</title>
          <meta name="description" content="Felipe's Personal Website" />
          <link rel="icon" href="/images/favicon.svg" />
        </Head>

        <div className="space-y-4">
          <h1 className="text-4xl font-bold">
            Tracking, examining and (maybe?) optimizing your SQL queries with
            SQLAlchemy and a bit of python syntatic sugar.
          </h1>
          <h2>
            by <b>Felipe Lima</b> | 0X/02/2023
          </h2>
          <p className="text-justify">
            Even though SQLAlchemy and its documentation are excellent,
            recently, I&apos;ve found my self struggling to come up with an easy
            way to track the SQL queries generated by the ORM without generating
            too much clutter on either the SQL results or python code. I was
            having some serious performance issues with SQL queries and was
            suspicious of the good ol&apos; N+1 being the most likely culprit.
          </p>
          <p className="text-justify">
            I needed an way to count how many SQL statements were executed under
            a certain block scope in python. Also, needed an way to inspect the
            raw SQL query statements and which order they were executed. If I
            could plug this into my test suite, would be a huge plus!
          </p>
        </div>
      </div>
    </BlogLayout>
  );
};

export default SQLAlchemyDoctor;
